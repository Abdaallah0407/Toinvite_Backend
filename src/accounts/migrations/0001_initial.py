# Generated by Django 3.2.12 on 2022-04-04 09:18

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone
import src.events.mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=100, unique=True)),
                ('random_code', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Телефон номер',
                'verbose_name_plural': 'Телефон номера',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Ник нейим')),
                ('email', models.EmailField(blank=True, db_index=True, max_length=255, null=True, unique=True, verbose_name='Почта')),
                ('phone_number', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Сотовый телефон')),
                ('address', models.CharField(blank=True, max_length=250, verbose_name='Адресс')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Город')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='Страна')),
                ('image', models.ImageField(blank=True, null=True, upload_to='user_images/', verbose_name='Изображение')),
                ('role', models.PositiveSmallIntegerField(choices=[(1, 'Админ'), (2, 'Пользователь')], default=2, verbose_name='Роль')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            bases=(src.events.mixins.ImageCompressorMixin, models.Model),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
